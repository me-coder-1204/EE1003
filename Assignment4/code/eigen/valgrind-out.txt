==9972== Memcheck, a memory error detector
==9972== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==9972== Using Valgrind-3.24.0-fcdaa47426-20241101 and LibVEX; rerun with -h for copyright info
==9972== Command: ./ball
==9972== Parent PID: 9966
==9972== 
--9972-- 
--9972-- Valgrind options:
--9972--    --leak-check=full
--9972--    --show-leak-kinds=all
--9972--    --track-origins=yes
--9972--    --verbose
--9972--    --log-file=valgrind-out.txt
--9972-- Contents of /proc/version:
--9972--   Linux version 6.12.9-arch1-1 (linux@archlinux) (gcc (GCC) 14.2.1 20240910, GNU ld (GNU Binutils) 2.43.1) #1 SMP PREEMPT_DYNAMIC Fri, 10 Jan 2025 00:39:41 +0000
--9972-- 
--9972-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand-rdseed-fma
--9972-- Page sizes: currently 4096, max supported 4096
--9972-- Valgrind library directory: /usr/lib/valgrind
--9972-- Reading syms from /home/arav/EE1003/EE1003/Assignment4/code/eigen/ball
--9972-- Reading syms from /usr/lib/ld-linux-x86-64.so.2
==9972== Downloading debug info for /usr/lib/ld-linux-x86-64.so.2...
--9972--   Considering /home/arav/.cache/debuginfod_client/1eb3b3e47bd3d9034ef4bd4ede577a26bcc6dcc6/debuginfo ..
--9972--   .. CRC is valid
==9972== Successfully downloaded debug file for /usr/lib/ld-linux-x86-64.so.2
--9972-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--9972--    object doesn't have a dynamic symbol table
--9972-- Scheduler: using generic scheduler lock implementation.
--9972-- Reading suppressions file: /usr/lib/valgrind/default.supp
==9972== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-9972-by-arav-on-???
==9972== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-9972-by-arav-on-???
==9972== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-9972-by-arav-on-???
==9972== 
==9972== TO CONTROL THIS PROCESS USING vgdb (which you probably
==9972== don't want to do, unless you know exactly what you're doing,
==9972== or are doing some strange experiment):
==9972==   /usr/lib/valgrind/../../bin/vgdb --pid=9972 ...command...
==9972== 
==9972== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==9972==   /path/to/gdb ./ball
==9972== and then give GDB the following command
==9972==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=9972
==9972== --pid is optional if only one valgrind process is running
==9972== 
==9972== Downloading debug info for /usr/lib/valgrind/memcheck-amd64-linux...
--9972--   Considering /home/arav/.cache/debuginfod_client/8d90e2041c4196faa241b19e284abb7125855c0a/debuginfo ..
--9972--   .. CRC is valid
==9972== Successfully downloaded debug file for /usr/lib/valgrind/memcheck-amd64-linux
--9972-- Warning: cross-CU LIMITATION: some inlined fn names
--9972-- might be shown as UnknownInlinedFun
--9972-- REDIR: 0x40270e0 (ld-linux-x86-64.so.2:strlen) redirected to 0x5821f114 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--9972-- REDIR: 0x4025aa0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x5821f12e (vgPlain_amd64_linux_REDIR_FOR_strcmp)
--9972-- REDIR: 0x4025870 (ld-linux-x86-64.so.2:index) redirected to 0x5821f149 (vgPlain_amd64_linux_REDIR_FOR_index)
--9972-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--9972-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==9972== WARNING: new redirection conflicts with existing -- ignoring it
--9972--     old: 0x04025aa0 (strcmp              ) R-> (0000.0) 0x5821f12e vgPlain_amd64_linux_REDIR_FOR_strcmp
==9972== Downloading debug info for /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so...
--9972--   Considering /home/arav/.cache/debuginfod_client/92c195939680c8adca97472fefd04679e336de68/debuginfo ..
--9972--   .. CRC is valid
==9972== Successfully downloaded debug file for /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--9972--     new: 0x04025aa0 (strcmp              ) R-> (2016.0) 0x0484f150 strcmp
==9972== WARNING: new redirection conflicts with existing -- ignoring it
--9972--     old: 0x040270e0 (strlen              ) R-> (0000.0) 0x5821f114 vgPlain_amd64_linux_REDIR_FOR_strlen
--9972--     new: 0x040270e0 (strlen              ) R-> (2007.0) 0x0484ddc0 strlen
--9972-- REDIR: 0x4024ed0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x48538a0 (mempcpy)
--9972-- Reading syms from /usr/lib/libm.so.6
--9972-- Reading syms from /usr/lib/libc.so.6
==9972== Downloading debug info for /usr/lib/libc.so.6...
--9972--   Considering /home/arav/.cache/debuginfod_client/98b3d8e0b8c534c769cb871c438b4f8f3a8e4bf3/debuginfo ..
--9972--   .. CRC is valid
==9972== Successfully downloaded debug file for /usr/lib/libc.so.6
--9972-- REDIR: 0x4027280 (ld-linux-x86-64.so.2:strncmp) redirected to 0x484e8c0 (strncmp)
==9972== Downloading debug info for /usr/lib/valgrind/vgpreload_core-amd64-linux.so...
--9972--   Considering /home/arav/.cache/debuginfod_client/c17d5783942c5ec1b05df8b9536e88056cfcda19/debuginfo ..
--9972--   .. CRC is valid
==9972== Successfully downloaded debug file for /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--9972-- REDIR: 0x4a1e710 (libc.so.6:strncasecmp) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1b860 (libc.so.6:mempcpy) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a32010 (libc.so.6:wcpncpy) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1bbc0 (libc.so.6:stpcpy) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a98060 (libc.so.6:__memmove_chk) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a40880 (libc.so.6:wmemcmp) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1c890 (libc.so.6:strcat) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1aeb0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a33ec0 (libc.so.6:wcsncpy) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a97f40 (libc.so.6:__memcpy_chk) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
==9972== WARNING: new redirection conflicts with existing -- ignoring it
--9972--     old: 0x04ade5d0 (__memcpy_chk_avx_una) R-> (2024.0) 0x048532b0 __memmove_chk
--9972--     new: 0x04ade5d0 (__memcpy_chk_avx_una) R-> (2030.0) 0x048539b0 __memcpy_chk
--9972-- REDIR: 0x4a33610 (libc.so.6:wcslen) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1ba10 (libc.so.6:memset) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a33f20 (libc.so.6:wcsnlen) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1ea10 (libc.so.6:strnlen) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1eaa0 (libc.so.6:strpbrk) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1ca10 (libc.so.6:strcmp) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1b980 (libc.so.6:memrchr) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a32400 (libc.so.6:wcschr) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1c900 (libc.so.6:index) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1ead0 (libc.so.6:rindex) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a324b0 (libc.so.6:wcscmp) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1bc30 (libc.so.6:stpncpy) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a40800 (libc.so.6:wmemchr) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1e8b0 (libc.so.6:strncmp) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1bc90 (libc.so.6:strcasecmp) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1dc90 (libc.so.6:strcspn) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a333e0 (libc.so.6:wcscpy) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1e7b0 (libc.so.6:strncasecmp_l) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1c980 (libc.so.6:strchrnul) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1adc0 (libc.so.6:bcmp) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1dc20 (libc.so.6:strcpy) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1bd30 (libc.so.6:strcasecmp_l) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1e680 (libc.so.6:strlen) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1e950 (libc.so.6:strncpy) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1b740 (libc.so.6:memmove) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
==9972== Preferring higher priority redirection:
--9972--     old: 0x04ade600 (__memcpy_avx_unalign) R-> (2018.0) 0x04850820 __memcpy_avx_unaligned_erms
--9972--     new: 0x04ade600 (__memcpy_avx_unalign) R-> (2018.1) 0x048525b0 memmove
--9972-- REDIR: 0x4a1ad40 (libc.so.6:memchr) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4a1eca0 (libc.so.6:strspn) redirected to 0x48391a0 (_vgnU_ifunc_wrapper)
--9972-- REDIR: 0x4ae3230 (libc.so.6:__strrchr_avx2) redirected to 0x484d5a0 (rindex)
--9972-- REDIR: 0x4a16e50 (libc.so.6:malloc) redirected to 0x4844730 (malloc)
--9972-- REDIR: 0x4ade600 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x48525b0 (memmove)
==9972== Use of uninitialised value of size 8
==9972==    at 0x10B0E0: copyMat (matcals.h:23)
==9972==    by 0x10B0E0: hessenberg (QR.h:62)
==9972==    by 0x10917C: main (fin.c:58)
==9972==  Uninitialised value was created by a heap allocation
==9972==    at 0x48447A8: malloc (vg_replace_malloc.c:446)
==9972==    by 0x109169: main (fin.c:57)
==9972== 
==9972== Invalid read of size 8
==9972==    at 0x10B0E0: copyMat (matcals.h:23)
==9972==    by 0x10B0E0: hessenberg (QR.h:62)
==9972==    by 0x10917C: main (fin.c:58)
==9972==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==9972== 
==9972== 
==9972== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==9972==  Access not within mapped region at address 0x0
==9972==    at 0x10B0E0: copyMat (matcals.h:23)
==9972==    by 0x10B0E0: hessenberg (QR.h:62)
==9972==    by 0x10917C: main (fin.c:58)
==9972==  If you believe this happened as a result of a stack
==9972==  overflow in your program's main thread (unlikely but
==9972==  possible), you can try to increase the size of the
==9972==  main thread stack using the --main-stacksize= flag.
==9972==  The main thread stack size used in this run was 8388608.
==9972== 
==9972== HEAP SUMMARY:
==9972==     in use at exit: 1,336 bytes in 19 blocks
==9972==   total heap usage: 19 allocs, 0 frees, 1,336 bytes allocated
==9972== 
==9972== Searching for pointers to 19 not-freed blocks
==9972== Checked 91,512 bytes
==9972== 
==9972== 16 bytes in 1 blocks are still reachable in loss record 1 of 7
==9972==    at 0x48447A8: malloc (vg_replace_malloc.c:446)
==9972==    by 0x109169: main (fin.c:57)
==9972== 
==9972== 40 bytes in 1 blocks are still reachable in loss record 2 of 7
==9972==    at 0x48447A8: malloc (vg_replace_malloc.c:446)
==9972==    by 0x109A52: createMat (matcals.h:12)
==9972==    by 0x109A52: zeros (matcals.h:105)
==9972==    by 0x1090E0: main (fin.c:42)
==9972== 
==9972== 40 bytes in 1 blocks are still reachable in loss record 3 of 7
==9972==    at 0x48447A8: malloc (vg_replace_malloc.c:446)
==9972==    by 0x109970: createMat (matcals.h:12)
==9972==    by 0x109970: eye (matcals.h:91)
==9972==    by 0x10AAC1: hessenberg (QR.h:37)
==9972==    by 0x10917C: main (fin.c:58)
==9972== 
==9972== 40 bytes in 1 blocks are still reachable in loss record 4 of 7
==9972==    at 0x48447A8: malloc (vg_replace_malloc.c:446)
==9972==    by 0x10AADE: createMat (matcals.h:12)
==9972==    by 0x10AADE: hessenberg (QR.h:38)
==9972==    by 0x10917C: main (fin.c:58)
==9972== 
==9972== 400 bytes in 5 blocks are still reachable in loss record 5 of 7
==9972==    at 0x48447A8: malloc (vg_replace_malloc.c:446)
==9972==    by 0x109A7B: createMat (matcals.h:15)
==9972==    by 0x109A7B: zeros (matcals.h:105)
==9972==    by 0x1090E0: main (fin.c:42)
==9972== 
==9972== 400 bytes in 5 blocks are still reachable in loss record 6 of 7
==9972==    at 0x48447A8: malloc (vg_replace_malloc.c:446)
==9972==    by 0x1099AB: createMat (matcals.h:15)
==9972==    by 0x1099AB: eye (matcals.h:91)
==9972==    by 0x10AAC1: hessenberg (QR.h:37)
==9972==    by 0x10917C: main (fin.c:58)
==9972== 
==9972== 400 bytes in 5 blocks are still reachable in loss record 7 of 7
==9972==    at 0x48447A8: malloc (vg_replace_malloc.c:446)
==9972==    by 0x10AB1B: createMat (matcals.h:15)
==9972==    by 0x10AB1B: hessenberg (QR.h:38)
==9972==    by 0x10917C: main (fin.c:58)
==9972== 
==9972== LEAK SUMMARY:
==9972==    definitely lost: 0 bytes in 0 blocks
==9972==    indirectly lost: 0 bytes in 0 blocks
==9972==      possibly lost: 0 bytes in 0 blocks
==9972==    still reachable: 1,336 bytes in 19 blocks
==9972==         suppressed: 0 bytes in 0 blocks
==9972== 
==9972== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==9972== 
==9972== 1 errors in context 1 of 2:
==9972== Invalid read of size 8
==9972==    at 0x10B0E0: copyMat (matcals.h:23)
==9972==    by 0x10B0E0: hessenberg (QR.h:62)
==9972==    by 0x10917C: main (fin.c:58)
==9972==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==9972== 
==9972== 
==9972== 1 errors in context 2 of 2:
==9972== Use of uninitialised value of size 8
==9972==    at 0x10B0E0: copyMat (matcals.h:23)
==9972==    by 0x10B0E0: hessenberg (QR.h:62)
==9972==    by 0x10917C: main (fin.c:58)
==9972==  Uninitialised value was created by a heap allocation
==9972==    at 0x48447A8: malloc (vg_replace_malloc.c:446)
==9972==    by 0x109169: main (fin.c:57)
==9972== 
==9972== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
